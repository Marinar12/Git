JSON

 Создать внешний репозиторий c названием JSON
зайти на GitHub. нажать создание нового репозитория

 Клонировать репозиторий JSON на локальный компьютер  
в GitBash ввести команду git clone и скопированная ссылка HTTPS репозитория JSON

 Внутри локального JSON создать файл “new.json”
touch new.json

 Добавить файл под гит
git add new.json

 Закоммитить файл 
git commit -m "add"

 Отправить файл на внешний GitHub репозиторий 
git push

 Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON 
 vim new.json 
{
"name": "Марина",git comm
"surname": "Радченко",
"age": 36,
"pets": 0,
"desired salary": "2000$"
}

 Отправить изменения на внешний репозиторий 
git add new.json
git commit -m "edit new.json"
git push

 Создать файл preferences.json
touch preferences.json

 В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON
vim preferences.json
{
"favoutite movie": "Harry Potter",
"favourite TV series": "North and South",
"favourite food": "ice cream",
"favourite season": "summer",
"country for visiting": "Greece"
}

 Создать файл svimkills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim skills.json
{
 "GitBash": true,
 "GitHub": true,
 "Postman": true,
 "Charles": true,
 "mobile testing": true
}

 Отправить сразу 2 файла на внешний репозиторий
git add preferences.json skills.json && git commit -m "add" && git push
 
 На веб интерфейсе создать файл touchgitvim.

 Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 Создать внешний репозиторий c названием XML
зайти на GitHub. нажать создание нового репозитория

 Клонировать репозиторий XML на локальный компьютер
в GitBash ввести команду git clone и скопированная ссылка HTTPS репозитория XML

 Внутри локального XML создать файл “new.xml”
touch new.xml

 Добавить файл под гит
git add new.xml

 Закоммитить файл
git commit -m "add new.xml"

 Отправить файл на внешний GitHub репозиторий
git push

 Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<?xml version="1.0" encoding="UTF-8"?>
<personal>
 <name>Марина</name>
 <surname>Радченко</surname>
 <age>36</age>
 <pets>0</pets>
 <desired salary>2000$</desired salary>
</personal>

 Отправить изменения на внешний репозиторий
git add new.xml
git commit -m "add"
git push

 Создать файл preferences.xml
touch preferences.xml

 В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<personal>
 <favoutite movie>Harry Potter</favoutite movie>
 <favourite TV series>North and Sviouth</favourite TV series>
 <favourite food>ice cream</favourite food>
 <favourite season>summer</favourite season>
 <country for visiting>Greece</country for visiting>
</personal>

 Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
vim skills.xml
<?xml version="1.0" encoding="UTF-8"?>
<study>
 <GitBash>true</GitBash>
 <GitHub>true</GitHub>
 <Postman>true</Postman>
 <Charles>true</Charles>
 <mobile testing>true</mobile testing>
</study>

 Сделать коммит в одну строку
git add preferences.xml skills.xml && git commit -m "add xml"

 Отправить сразу 2 файла на внешний репозиторий
git push

 На веб интерфейсе создать файл bug_report.xml

 Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

 Сделать Commit changes (сохранить) изменения на веб интерфейсе.touch 

 Синхронизировать внешний и локальный репозиторий XML
git pull


TXT
 Создать внешний репозиторий c названием TXT
зайти на GitHub. нажать создание нового репозитория

 Клонировать репозиторий TXT на локальный компьютер
в GitBash ввести команду git clone и скопированная ссылка HTTPS репозитория TXT

 Внутри локального TXT создать файл “new.txt”
touch new.txt

 Добавить файл под гит
git add new.txt

 Закоммитить файл
git commit -m "add new.txt"

 Отправить файл на внешний GitHub репозиторий
git push

 Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt 
name: Марина,
surname: Радченко,
age: 36,
pets: 0,
desired salary: 2000$

 Отправить изменения на внешний репозиторий
git add new.txt
git commit -m "add new.txt"
git push

 Создать файл preferences.txt
touch preferences.txt

 В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
favoutite movie: Harry Potter,
favourite TV series: North and South,
favourite food: ice cream,
favourite season: summer,
country for visiting: Greece

 Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
vim skills.txt
GitBash: true,
GitHub: true,
Postman: true,
Charles: true,
mobile testing: true

 Сделать коммит в одну строку
add preferences.txt skills.txt && git commit -m "add txt"  

 Отправить сразу 2 файла на внешний репозиторий
git push

 На веб интерфейсе создать файл bug_report.txt

 Сделать Commit changes (сохранить) изменения на веб интерфейсе

 На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT

 Сделать Commit changes (сохранить) изменения на веб интерфейсе

 Синхронизировать внешний и локальный репозиторий TXT
git pull